@page "/"
@using Blazored.SessionStorage
@using RR.DiceDuel.Core.Services.AuthService
@using RR.DiceDuel.Core.Services.SessionService
@rendermode InteractiveServer

@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject ISessionStorageService SessionStorage
@inject ISessionService SessionService

<PageTitle>Home</PageTitle>

<h1>Hello, @_userName!</h1>
Welcome to your new app.
Status: @_message

<div class="d-flex justify-content-center align-items-center vh-100">
    <button class="btn btn-primary" @onclick="OnButtonClick">Let's Play!</button>
</div>

@code
{
    private string _userName = string.Empty;
    private string _message = "Waiting connection...";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var token = await SessionStorage.GetItemAsync<string>("authToken");

            var isTokenValid = AuthService.VerifyJwt(token);
            if (!isTokenValid)
            {
                Navigation.NavigateTo("/login");
                return;
            }

            _message = "Connected!";
            _userName = AuthService.GetUserName(token);
            
            StateHasChanged();
        }
        
        await base.OnAfterRenderAsync(firstRender);
    }
    
    private void OnButtonClick()
    {
        var sessionId = SessionService.GetOrCreateSession();
        Navigation.NavigateTo($"/game/{sessionId}");
    }
}
